{{$name := index . 0 -}}
{{$pointer := index . 1 -}}
{{$value := index . 2 -}}

{{if some $value.Map -}}
    {{$ifaceName := printf "%s%s" $name $value.Map.Name -}}

    {{$prefixPointer := printf "%s.%s()" $pointer $ifaceName -}}

    {{template "length" (list $name $prefixPointer $value.Map.Prefix)}}

	length += {{$pointer}}.Length()
{{else if some $value.Remaining -}}
    {{$itemPointer := temp -}}

    for _, {{$itemPointer}} := range {{$pointer}} {
        _ = {{$itemPointer}}

        {{template "length" (list $name $itemPointer $value.Remaining)}}
    }
{{else if some $value.Basic -}}
    {{if eq $value.Basic "uint8" -}}
        length += 1
    {{else if eq $value.Basic "uint16" -}}
        length += 2
    {{else if eq $value.Basic "uint32" -}}
        length += 4
    {{else if eq $value.Basic "uint64" -}}
        length += 8
    {{else if eq $value.Basic "int8" -}}
        length += 1
    {{else if eq $value.Basic "int16" -}}
        length += 2
    {{else if eq $value.Basic "int32" -}}
        length += 4
    {{else if eq $value.Basic "int64" -}}
        length += 8
    {{else if eq $value.Basic "float32" -}}
        length += 4
    {{else if eq $value.Basic "float64" -}}
        length += 8
    {{else if eq $value.Basic "string" -}}
        length += len({{$pointer}}) + 1
    {{end -}}
{{else if some $value.Array -}}
    {{$itemPointer := temp -}}

    for _, {{$itemPointer}} := range {{$pointer}} {
        _ = {{$itemPointer}}

        {{template "length" (list $name $itemPointer $value.Array)}}
    }
{{else if some $value.Struct -}}
    {{$structName := printf "%s%s" $name $value.Struct.Name -}}

    {{range $field := $value.Struct.Fields -}}
        {{$fieldPointer := printf "%s.%s" $pointer $field.Name -}}

        {{template "length" (list $structName $fieldPointer $field)}}
    {{end -}}
{{else if some $value.LengthPrefixedSlice -}}
    {{$lengthPointer := temp -}}

    {{$lengthPointer}} := {{template "type" (list $name $value.LengthPrefixedSlice.Prefix)}}(len({{$pointer}}))
    _ = {{$lengthPointer}}

    {{template "length" (list $name $lengthPointer $value.LengthPrefixedSlice.Prefix)}}

    {{$itemPointer := temp -}}

    for _, {{$itemPointer}} := range {{$pointer}} {
        _ = {{$itemPointer}}

        {{template "length" (list $name $itemPointer $value.LengthPrefixedSlice)}}
    }
{{else if some $value.NullableLengthPrefixedSlice -}}
    {{$lengthPointer := temp -}}

    {{$lengthPointer}} := {{template "type" (list $name $value.NullableLengthPrefixedSlice.Prefix)}}(len({{$pointer}}))
    _ = {{$lengthPointer}}

    {{template "length" (list $name $lengthPointer $value.NullableLengthPrefixedSlice.Prefix)}}

    {{$itemPointer := temp -}}

    for _, {{$itemPointer}} := range {{$pointer}} {
        _ = {{$itemPointer}}

        {{template "length" (list $name $itemPointer $value.NullableLengthPrefixedSlice)}}
    }
{{else if some $value.ZeroTerminatedSlice -}}
    {{$structName := printf "%s%s" $name $value.ZeroTerminatedSlice.Name -}}

    {{$itemPointer := temp -}}

    for _, {{$itemPointer}} := range {{$pointer}} {
        _ = {{$itemPointer}}

        {{range $field := $value.ZeroTerminatedSlice.Fields -}}
            {{$fieldPointer := printf "%s.%s" $itemPointer $field.Name -}}

            {{template "length" (list $structName $fieldPointer $field)}}
        {{end -}}
    }

    {{$donePointer := temp -}}

    var {{$donePointer}} {{template "type" (list $structName (index $value.ZeroTerminatedSlice.Fields 0))}}
    _ = {{$donePointer}}

    {{template "length" (list $name $donePointer (index $value.ZeroTerminatedSlice.Fields 0))}}
{{end -}}
